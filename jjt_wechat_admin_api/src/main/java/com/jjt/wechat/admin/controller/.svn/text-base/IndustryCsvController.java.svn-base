package com.qiaohu.wechat.admin.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.qiaohu.wechat.admin.BaseController;
import com.qiaohu.wechat.admin.RestResult;
import com.qiaohu.wechat.admin.dto.BasePage;
import com.qiaohu.wechat.admin.dto.IndustryItem;
import com.qiaohu.wechat.admin.service.ICsvService;
import com.qiaohu.wechat.admin.service.IIndustryModelService;
import com.qiaohu.wechat.common.utils.CheckUtils;
import com.qiaohu.wechat.constants.Constants;
import com.qiaohu.wechat.core.config.ApiConfig;
import com.qiaohu.wechat.core.entity.FileImportTask;
import com.qiaohu.wechat.core.entity.MaterialContent;
import com.qiaohu.wechat.core.entity.WxTemplate;
import com.qiaohu.wechat.core.exception.AppException;
import com.qiaohu.wechat.helper.MessageHelper;

@RestController
@RequestMapping("/industrycsv")
public class IndustryCsvController extends BaseController {
	
	@Autowired
	protected MessageHelper messageHelper;

	@Autowired
	private ICsvService csvService;
	
	@Autowired
	private IIndustryModelService industryModelService;
	
	@RequestMapping(value = "/list", method = RequestMethod.POST)
	public RestResult list(@RequestBody MaterialContent dto) {

		String accessToken = null;
		//获取模板ID
		//TemplateMsgAPI templateMsgAPI =null;
		try {
			accessToken = ApiConfig.getInstance().getAccessToken();
			if (CheckUtils.isNullOrEmpty(accessToken)) {
				logger.error("accessToken is null or empty.");
				return new RestResult(messageHelper.mesg_error_0001);
			}

			/*// 初始化获取模板消息接口
			templateMsgAPI = new TemplateMsgAPI(accessToken);
			//获取到所有模板
			PrivateTemplate[] allTemplate =templateMsgAPI.getAllPrivateTemplate();*/
			List<WxTemplate> allTemplate = industryModelService.selectAll();
			List<IndustryItem> industryItems = new ArrayList<IndustryItem>();
			String template_id = null;
			String title = null;
			String content = null;
			String industryFileName = null;
			if(allTemplate.size()>0){
				for (int i = 0; i < allTemplate.size(); i++) {
					template_id = allTemplate.get(i).getTemplateId();
					title =  allTemplate.get(i).getTitle();
					//content =  allTemplate[i].getContent();
					if(!CheckUtils.isNullOrEmpty( allTemplate.get(i).getContent())){
						content= allTemplate.get(i).getContent().replace("\n\n", "\n");
					}
					industryFileName =allTemplate.get(i).getFileName();
					
					if(CheckUtils.isNullOrEmpty(industryFileName)){
						industryFileName="*";
					}
					
					if(!CheckUtils.isNullOrEmpty(industryFileName)&&CheckUtils.isNullOrEmpty(industryFileName.trim())){
						industryFileName="*";
					}
							
					IndustryItem industryItem = new IndustryItem(template_id, title, content,industryFileName);
					industryItems.add(industryItem);
				}
			}
		
			// 返回查询结果
			return new RestResult(new BasePage(allTemplate.size(),
					industryItems));
		} catch (AppException e) {
			logger.error(e.getMessage(), e);
			// 返回异常信息
			return new RestResult(messageHelper.mesg_error_0001);
		}

	}
	
	@RequestMapping(value = "/upload", method = RequestMethod.POST)
	public RestResult upload(
			@RequestParam(value = "file", required = false) MultipartFile file,
			@RequestParam(value = "first_data") String firstData,
			@RequestParam(value = "url") String url,
			@RequestParam(value = "remark_data") String remarkData,
			@RequestParam(value = "template_id") String templateId,
			HttpServletRequest request) {
		
		FileImportTask fileImportTask = new FileImportTask();
		/*WxTemplate template =industryModelService.findByTemplateId(templateId);
		if(!CheckUtils.isNull(template)){
			if(CheckUtils.isNullOrEmpty(template.getFileName())){
				return new RestResult(messageHelper.mesg_info_0018);
			}
			if(!file.getName().contains(template.getFileName())){
				return new RestResult(messageHelper.mesg_info_0017);
			}
		}*/
		// 保存
		try {
			fileImportTask.setTemplateId(templateId);
			fileImportTask.setUrl(url);
			fileImportTask.setFirstData(firstData);
			fileImportTask.setRemarkData(remarkData);
			csvService.uploadIndustryCsvFile(file, fileImportTask);

		} catch (Exception e) {

			return new RestResult(e.getMessage());
		}
		return new RestResult(Constants.SUCCESS, messageHelper.mesg_info_0012);

	}
			
}
