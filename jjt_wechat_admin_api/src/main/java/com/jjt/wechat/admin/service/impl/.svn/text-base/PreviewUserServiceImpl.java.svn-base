package com.qiaohu.wechat.admin.service.impl;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import tk.mybatis.mapper.entity.Example;
import tk.mybatis.mapper.entity.Example.Criteria;

import com.qiaohu.wechat.admin.service.IPreviewUserService;
import com.qiaohu.wechat.common.utils.CheckUtils;
import com.qiaohu.wechat.constants.Constants;
import com.qiaohu.wechat.core.dao.PreviewUserDao;
import com.qiaohu.wechat.core.entity.PreviewUser;
import com.qiaohu.wechat.core.entity.extend.PreviewUserExt;
import com.qiaohu.wechat.core.exception.AppException;
import com.qiaohu.wechat.helper.MessageHelper;

@Service(value = "previewUserService")
public class PreviewUserServiceImpl implements IPreviewUserService {
	private static final Logger logger = LoggerFactory
			.getLogger(PreviewUserServiceImpl.class);
	@Autowired
	private PreviewUserDao previewUserDao;
	@Autowired
	MessageHelper messageHelper;

	@Override
	public List<PreviewUser> search(PreviewUserExt para) throws AppException {
		// 查询条件做成
		Example example = new Example(PreviewUser.class);
		Criteria criteria = example.createCriteria();
		if (!CheckUtils.isNullOrEmpty(para.getNickname())) {
			criteria.andLike("nickName", "%" + para.getNickname() + "%");
		}
		if (!CheckUtils.isNullOrEmpty(para.getGroupId())) {
			criteria.andEqualTo("groupId", para.getGroupId());
		}
		// 分页查询
		try {
			return previewUserDao.selectByExample(example);
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
			// 异常信息
			throw new AppException(messageHelper.mesg_error_0001, e);
		}

	}

	@Override
	public PreviewUser detail(String openId) throws AppException {

		return null;
	}

	@Override
	public int insert(PreviewUser previewUser) throws AppException {
		Example example = new Example(PreviewUser.class);
		Criteria criteria = example.createCriteria();
		criteria.andEqualTo("openId", previewUser.getOpenId());
		criteria.andEqualTo("groupId", previewUser.getGroupId());
		int count = 0;
		try {
			count = previewUserDao.selectCountByExample(example);
			if (count > Constants.SUCCESS) {
				throw new AppException(messageHelper.mesg_info_0016);
			}
			return previewUserDao.insert(previewUser);
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
			// 异常信息
			throw new AppException(messageHelper.mesg_error_0001, e);
		}

	}

	@Override
	public int update(PreviewUser previewUser) throws AppException {

		return 0;
	}

	@Override
	public int delete(PreviewUser previewUser) throws AppException {

		try {

			return previewUserDao.deleteByPrimaryKey(previewUser.getId());
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
			// 异常信息
			throw new AppException(messageHelper.mesg_error_0001, e);
		}
	}

}
