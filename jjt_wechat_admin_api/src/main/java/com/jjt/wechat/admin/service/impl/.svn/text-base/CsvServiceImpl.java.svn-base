package com.qiaohu.wechat.admin.service.impl;

import java.io.File;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import com.qiaohu.wechat.admin.service.ICsvService;
import com.qiaohu.wechat.config.AppConfig;
import com.qiaohu.wechat.core.constants.ConfigConstants;
import com.qiaohu.wechat.core.dao.FileImportTaskDao;
import com.qiaohu.wechat.core.entity.FileImportTask;
import com.qiaohu.wechat.core.exception.AppException;
import com.qiaohu.wechat.core.util.SysPropUtil;
import com.qiaohu.wechat.helper.MessageHelper;

@Service("csvService")
public class CsvServiceImpl implements ICsvService {

	private static final Logger logger = LoggerFactory
			.getLogger(CsvServiceImpl.class);

	@Autowired
	protected AppConfig appConfig;
	@Autowired
	private MessageHelper messageHelper;

	@Autowired
	private FileImportTaskDao fileImportTaskDao;

	@Override
	@Transactional
	public void uploadCsvFile(MultipartFile file, FileImportTask fileImportTask)
			throws AppException {
		long maxSize = appConfig.csvMaxSize * 1024 * 1024;
		if (file.getSize() > maxSize) {
			throw new AppException(String.format(messageHelper.mesg_info_0015,
					appConfig.csvMaxSize));
		}

		String fileName = file.getOriginalFilename().toLowerCase();
		if (!fileName.matches(appConfig.csvFileNameFormat)) {
			throw new AppException(messageHelper.mesg_info_0017);
		}
		String savePath = SysPropUtil.getString(ConfigConstants.CSV_FILE_PATH);
		File targetFile = new File(savePath);
		if (!targetFile.exists()) {
			targetFile.mkdirs();
		}
		String doneFileName = null;
		String prefix = null;
		File doneFile = null;
		File newFile = null;
		String newFileName = null;
		prefix = fileName.substring(fileName.lastIndexOf("."));

		// newFileName = fileName.substring(0, fileName.indexOf(prefix)) + "_"
		// + DateUtils.format(DateUtils.getNow(), DateUtil.YMDHHMMSS3);

		newFileName = fileName.substring(0, fileName.indexOf(prefix));
		newFile = new File(savePath + File.separator + newFileName + prefix);

		if (newFile.exists()) {
			//modify mesg_info_0017 to change mesg_info_0018 start at 2017/08/15 by bob
			throw new AppException(messageHelper.mesg_info_0018);
			//modify mesg_info_0017 to change mesg_info_0018 end at 2017/08/15 by bob
		}
		// 保存
		try {

			file.transferTo(newFile);
			doneFileName = newFileName + appConfig.csvFileNameDone;

			doneFile = new File(savePath + File.separator + doneFileName);
			if (doneFile.exists()) {
				doneFile.delete();
			}
			if (!doneFile.createNewFile()) {
				logger.error("doneFile 创建失败。");
				throw new AppException(messageHelper.mesg_info_0013);
			}
			fileImportTask.setFileName(newFileName + prefix);
			fileImportTask.setFileType("3");
			fileImportTask.setStatus(0);
			fileImportTask.setProcRows(new Long(0));
			fileImportTaskDao.insert(fileImportTask);
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
			throw new AppException(messageHelper.mesg_info_0013);
		}

	}

	@Override
	@Transactional
	public void uploadPushCsvFile(MultipartFile file, FileImportTask fileImportTask)
			throws AppException {
		
		long maxSize = appConfig.csvMaxSize * 1024 * 1024;
		if (file.getSize() > maxSize) {
			throw new AppException(String.format(messageHelper.mesg_info_0015,
					appConfig.csvMaxSize));
		}
		
		//获取文件名
		String fileName = file.getOriginalFilename().toLowerCase();
		//判断文件格式
		if (!fileName.matches(appConfig.pushcsvFileNameFormat)) {
			throw new AppException(messageHelper.mesg_info_0017);
		}
		String savePath = SysPropUtil.getString(ConfigConstants.CSV_FILE_PATH);
		File targetFile = new File(savePath);
		if (!targetFile.exists()) {
			targetFile.mkdirs();
		}
		String doneFileName = null;
		String prefix = null;
		File doneFile = null;
		File newFile = null;
		String newFileName = null;
		prefix = fileName.substring(fileName.lastIndexOf("."));
		newFileName = fileName.substring(0, fileName.indexOf(prefix));
		newFile = new File(savePath + File.separator + newFileName + prefix);
		if (newFile.exists()) {	
			throw new AppException(messageHelper.mesg_info_0018);
		}
		// 保存
		try {

			file.transferTo(newFile);
			doneFileName = newFileName + appConfig.csvFileNameDone;

			doneFile = new File(savePath + File.separator + doneFileName);
			if (doneFile.exists()) {
				doneFile.delete();
			}
			if (!doneFile.createNewFile()) {
				logger.error("doneFile 创建失败。");
				throw new AppException(messageHelper.mesg_info_0013);
			}
			fileImportTask.setFileName(newFileName + prefix);
			fileImportTask.setFileType("8");
			fileImportTask.setStatus(0);
			fileImportTask.setProcRows(new Long(0));
			fileImportTaskDao.insert(fileImportTask);
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
			throw new AppException(messageHelper.mesg_info_0013);
		}
		
	}
	
	@Override
	@Transactional
	public void uploadModelCsvFile(MultipartFile file, FileImportTask fileImportTask)
			throws AppException {
		long maxSize = appConfig.csvMaxSize * 1024 * 1024;
		if (file.getSize() > maxSize) {
			throw new AppException(String.format(messageHelper.mesg_info_0015,
					appConfig.csvMaxSize));
		}

		String fileName = file.getOriginalFilename().toLowerCase();
		logger.info("要上传的csv文件名称是："+fileName);
		if (!fileName.matches(appConfig.modelcsvFileNameFormat)) {
			throw new AppException(messageHelper.mesg_info_0017);
		}
		String savePath = SysPropUtil.getString(ConfigConstants.CSV_FILE_PATH);
		File targetFile = new File(savePath);
		if (!targetFile.exists()) {
			targetFile.mkdirs();
		}
		String doneFileName = null;
		String prefix = null;
		File doneFile = null;
		File newFile = null;
		String newFileName = null;
		prefix = fileName.substring(fileName.lastIndexOf("."));

		newFileName = fileName.substring(0, fileName.indexOf(prefix));
		newFile = new File(savePath + File.separator + newFileName + prefix);

		if (newFile.exists()) {
			throw new AppException(messageHelper.mesg_info_0018);
		}
		// 保存
		try {

			file.transferTo(newFile);
			doneFileName = newFileName + appConfig.csvFileNameDone;

			doneFile = new File(savePath + File.separator + doneFileName);
			if (doneFile.exists()) {
				doneFile.delete();
			}
			if (!doneFile.createNewFile()) {
				logger.error("doneFile 创建失败。");
				throw new AppException(messageHelper.mesg_info_0013);
			}
			fileImportTask.setFileName(newFileName + prefix);
			fileImportTask.setFileType("9");
			fileImportTask.setStatus(0);
			fileImportTask.setProcRows(new Long(0));
			fileImportTaskDao.insert(fileImportTask);
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
			throw new AppException(messageHelper.mesg_info_0013);
		}

	}
	
	@Override
	@Transactional
	public void uploadIndustryCsvFile(MultipartFile file, FileImportTask fileImportTask)
			throws AppException {
		
		long maxSize = appConfig.csvMaxSize * 1024 * 1024;
		if (file.getSize() > maxSize) {
			throw new AppException(String.format(messageHelper.mesg_info_0015,
					appConfig.csvMaxSize));
		}

		String fileName = file.getOriginalFilename().toLowerCase();
		/*if (!fileName.matches(appConfig.industrycsvFileNameFormat)) {
			throw new AppException(messageHelper.mesg_info_0017);
		}*/
		String savePath = SysPropUtil.getString(ConfigConstants.CSV_FILE_PATH);
		File targetFile = new File(savePath);
		if (!targetFile.exists()) {
			targetFile.mkdirs();
		}
		String doneFileName = null;
		String prefix = null;
		File doneFile = null;
		File newFile = null;
		String newFileName = null;
		prefix = fileName.substring(fileName.lastIndexOf("."));

		newFileName = fileName.substring(0, fileName.indexOf(prefix));
		newFile = new File(savePath + File.separator + newFileName + prefix);

		if (newFile.exists()) {
			throw new AppException(messageHelper.mesg_info_0018);
		}
		// 保存
		try {

			file.transferTo(newFile);
			doneFileName = newFileName + appConfig.csvFileNameDone;

			doneFile = new File(savePath + File.separator + doneFileName);
			if (doneFile.exists()) {
				doneFile.delete();
			}
			if (!doneFile.createNewFile()) {
				logger.error("doneFile 创建失败。");
				throw new AppException(messageHelper.mesg_info_0013);
			}
			fileImportTask.setFileName(newFileName + prefix);
			fileImportTask.setFileType("99");
			fileImportTask.setStatus(0);
			fileImportTask.setProcRows(new Long(0));
			fileImportTaskDao.insert(fileImportTask);
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
			throw new AppException(messageHelper.mesg_info_0013);
		}

	}
}
