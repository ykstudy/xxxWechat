package com.qiaohu.wechat.config;

import java.util.Enumeration;
import java.util.concurrent.ConcurrentHashMap;

import javax.servlet.annotation.WebListener;
import javax.servlet.http.HttpSession;
import javax.servlet.http.HttpSessionEvent;
import javax.servlet.http.HttpSessionListener;

import com.qiaohu.wechat.core.entity.UserAdmin;

@WebListener
public class SessionListener implements HttpSessionListener {
	@SuppressWarnings("rawtypes")
	public static ConcurrentHashMap sessionMap = new ConcurrentHashMap();

	@SuppressWarnings("unchecked")
	@Override
	public void sessionCreated(HttpSessionEvent event) {
		HttpSession session = event.getSession();
		// 初始化当前session
		sessionMap.put(session.getId(), session);

	}

	@SuppressWarnings("static-access")
	@Override
	public void sessionDestroyed(HttpSessionEvent event) {
		this.delSession(event.getSession());

	}

	public static synchronized void delSession(HttpSession session) {
		if (session != null) {
			UserAdmin admin = (UserAdmin) session.getAttribute("users");
			if (admin != null) {
				SessionListener.sessionMap.remove(admin.getAdminId());
			}
		}
	}

	@SuppressWarnings("rawtypes")
	public static synchronized void forceLogoutUser(String id) {
		// 删除单一登录中记录的变量
		if (SessionListener.sessionMap.get(id) != null) {
			HttpSession hs = (HttpSession) SessionListener.sessionMap.get(id);
			SessionListener.sessionMap.remove(id);
			Enumeration e = hs.getAttributeNames();
			while (e.hasMoreElements()) {
				String sessionName = (String) e.nextElement();
				// 清空session
				hs.removeAttribute(sessionName);
			}

		}
	}
}
