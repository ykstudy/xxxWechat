package com.qiaohu.wechat.admin.controller;

import java.sql.Timestamp;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.github.pagehelper.Page;
import com.qiaohu.wechat.admin.BaseController;
import com.qiaohu.wechat.admin.RestResult;
import com.qiaohu.wechat.admin.auth.AuthRequired;
import com.qiaohu.wechat.admin.dto.BasePage;
import com.qiaohu.wechat.common.utils.CheckUtils;
import com.qiaohu.wechat.constants.Constants;
import com.qiaohu.wechat.core.entity.WxBanner;
import com.qiaohu.wechat.core.entity.extend.WxBannerExt;
import com.qiaohu.wechat.core.exception.AppException;
import com.qiaohu.wechat.core.service.IWxBannerService;
import com.qiaohu.wechat.helper.MessageHelper;

/**
 * banner接口
 * @author mxt
 */
@RestController
@RequestMapping("/banner")
public class WxBannerController extends BaseController {

	@Autowired
	protected MessageHelper messageHelper;
	@Autowired
	private IWxBannerService bannerService;
	
	/**
	 * @Description: 根据id修改banner
	 * @param id
	 * @return
	 */
	@AuthRequired(permission = "wx.banner.update")
	@RequestMapping(value = "/update", method = RequestMethod.POST)
	public RestResult update(@RequestBody WxBanner banner) {
		if (bannerService.update(banner)) {
			return new RestResult(Constants.SUCCESS, messageHelper.mesg_info_0003);
		}
		return new RestResult(messageHelper.mesg_error_0001);
	}
	
	/**
	 * @Description: 根据id删除banner
	 * @param id
	 * @return
	 */
	@AuthRequired(permission = "wx.banner.delete")
	@RequestMapping(value = "/delete", method = RequestMethod.POST)
	public RestResult delete(@RequestBody WxBanner banner) {
		if (bannerService.deleteById(banner)) {
			return new RestResult(Constants.SUCCESS, messageHelper.mesg_info_0002);
		}
		return new RestResult(messageHelper.mesg_error_0001);
	}
	
	/**
	* @Description: 根据id获取banner
	* @param id
	* @return
	*/
	@AuthRequired(permission = "wx.banner.list")
	@RequestMapping(value = "/detail", method = RequestMethod.GET)
	public RestResult detail(Integer id) {
		
		WxBanner banner = null;
		
		try {
			banner = bannerService.detail(id);
			if (CheckUtils.isNull(banner)) {
				return new RestResult(messageHelper.mesg_error_0001);
			}
			return new RestResult(banner);
		} catch (AppException e) {
			return new RestResult(messageHelper.mesg_error_0001);
		}
	}
	
	/**
	* @Description: banner列表
	* @param para
	* @return
	*/
	@AuthRequired(permission = "wx.banner.list")
	@RequestMapping(value = "/list", method = RequestMethod.POST)
	public RestResult list(@RequestBody WxBannerExt para) {
		
		Page<WxBanner> list = null;
		
		try {
			// 返回查询结果
			list = bannerService.search(para);

			if (CheckUtils.isNullOrEmpty(list.getResult())
					&& para.getPage() > 0) {
				para.setPage(0);
				list = bannerService.search(para);
			}
			//构造分页对象返回数据		
			return new RestResult(new BasePage(list.getTotal(),
					list.getResult()));
		} catch (AppException e) {
			// 返回异常信息
			return new RestResult(messageHelper.mesg_error_0001);
		}

	}

	/**
	* @Description: 新增banner数据
	* @param banner
	*/
	@AuthRequired(permission = "wx.banner.create")
	@RequestMapping(value = "/create", method = RequestMethod.POST)
	public RestResult create(@RequestBody WxBanner banner) {
		String msg = null;
		// 如果返回数据，代表校验失败
		if (null != (msg = checkParam(banner))) {
			return new RestResult(msg);
		}
		//设置修改人姓名
		banner.setModifyUser(getAdmin().getName());
		//设置修改时间
		banner.setModifyDate(new Timestamp(System.currentTimeMillis()));
		
		//保存数据返回true代表成功
		if (bannerService.insert(banner)) {
			return new RestResult(Constants.SUCCESS, messageHelper.mesg_info_0001);
		}
		return new RestResult(messageHelper.mesg_error_0001);
	}
	
	/**
	* @Description: 根据在籍版本名查询已经所有月号
	* @param prodgrname 在籍版本名
	* @return 月号字符串
	*/
	@RequestMapping(value = "/getProdids", method = RequestMethod.POST)
	public RestResult getProdids(@RequestBody String prodgrname) {
		String prodids = bannerService.getProdids(prodgrname);
		return new RestResult((Object)prodids);
	}

	/**
	 * 校验模板参数是否合格
	 * @param banner 校验模板对象
	 * @return 如果通过返回null,否则返回错误信息
	 */
	private String checkParam(WxBanner banner) {
		String msg = null;
		// 校验name不为空，长度不超过
		if (!CheckUtils.checkPara(banner.getName(), 20)) {
			msg = messageHelper.mesg_info_0004;
		}
		// 校验content不为空，长度不超过50
		if (!CheckUtils.checkPara(banner.getContent(), 50)) {
			msg = messageHelper.mesg_info_0004;
		}
		// 校验url地址，并长度不超过200
		if (!CheckUtils.checkPara(banner.getUrl(), CheckUtils.HTTP, 120)) {
			msg = messageHelper.mesg_info_1501;
		}
		// 校验prodgrname非空
		if (!CheckUtils.checkPara(banner.getProdgrname(),20)) {
			msg = messageHelper.mesg_info_0004;
		}
		// 校验Prodid非空
		if (!CheckUtils.checkPara(banner.getProdid(),200)) {
			msg = messageHelper.mesg_info_0004;
		}
		return msg;
	}

}
