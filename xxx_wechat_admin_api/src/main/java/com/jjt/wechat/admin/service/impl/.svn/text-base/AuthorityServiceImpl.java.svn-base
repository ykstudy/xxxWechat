package com.qiaohu.wechat.admin.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import tk.mybatis.mapper.entity.Example;
import tk.mybatis.mapper.entity.Example.Criteria;

import com.qiaohu.wechat.admin.service.IAuthorityService;
import com.qiaohu.wechat.common.utils.CheckUtils;
import com.qiaohu.wechat.core.dao.AuthorityDao;
import com.qiaohu.wechat.core.entity.Authority;
import com.qiaohu.wechat.core.exception.AppException;

@Service("authorityService")
public class AuthorityServiceImpl implements IAuthorityService {

	@Autowired
	private AuthorityDao authorityDao;

	@Override
	public List<Authority> searchByRoleId(String roleId) throws AppException {
		Example example = new Example(Authority.class);
		Criteria criteria = example.createCriteria();
		criteria.andEqualTo("roleId", roleId);
		example.setOrderByClause("authority_code ASC");
		return authorityDao.selectByExample(example);
	}

	@Override
	public List<String> searchAuthorityCodeByRoleId(String roleId)
			throws AppException {
		List<Authority> list = searchByRoleId(roleId);
		if (CheckUtils.isNullOrEmpty(list)) {
			throw new AppException("你没有权限");
		}
		List<String> codes = new ArrayList<String>();
		for (Authority authority : list) {
			codes.add(authority.getAuthorityCode());
		}
		return codes;
	}

	@Override
	public List<Authority> searchAll() throws AppException {
		Example example = new Example(Authority.class);
		try {
			example.setOrderByClause("authority_code ASC");
			return authorityDao.selectByExample(example);
		} catch (Exception e) {
			throw new AppException("查询所有权限信息失败", e);
		}

	}

}
